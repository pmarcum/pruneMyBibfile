name: Prune-out unused .bib entries
# Version: 07042024
#
# Automatically runs when .bib file or .tex file is changed in repo. Will prune the .bib file and 
# produce a 'ref.bib' file that can be used for submission rather than the huge BibMan bibfile. 
# NOTE: As of 06/10/2024, if you use BibMan to manage your bibliography library, when you execute 
# BibMan, a copy of pruneMyBibfile will automatically be installed in the github repository of your
# paper/proposal/document so that the pruned.bib file will be automatically generated whenever a 
# .tex or .bib file is changed in that repo. 
# ############################
#      Pamela M. Marcum      #
#  first created: 06/06/2024 #
# ############################

on:
  push:
    paths:
    - '**.tex'
    - '**.bib'
    - 'do_NOT_manually_edit/**.bib'
  workflow_dispatch:
jobs:
  prune_bibfile:
    runs-on: ubuntu-latest
    permissions:
       contents: write
    steps:
       - name: Clone repo and install python
         uses: actions/checkout@v4  # checkout the repository content to github runner.

       - name: setup python
         uses: actions/setup-python@v5
         with:
            python-version: '3.9' #install the python needed
            
       - name: Get list of all .tex files in repo
         id: texlist
         uses: Rishabh510/Path-lister-action@master
         with:
            path: "./"
            type: ".tex"

       - name: Get list of all .bib files
         id: biblist
         uses: Rishabh510/Path-lister-action@master
         with:
            path: "./"
            type: ".bib"
         
       - name: Process the bib and tex files and perform pruning
         run: |
            echo ===> combining all .tex files in repo in into a single temporary file
            touch texfile.tmp
            texfileExists=0
            for path in ${{ steps.texlist.outputs.paths }}
            do
                cat $path >> texfile.tmp; texfileExists=1
            done

            echo ===> combining all .bib files in repo into a single temporary file
            touch bibfile.tmp
            bibfileExists=0
            for path in ${{ steps.biblist.outputs.paths }}
            do
                if [[ ! $path =~ "pruned" ]]; then cat $path >> bibfile.tmp; bibfileExists=1; fi
            done
            
            # change all natbib cite commands to plain cite command
            if [[ "$texfileExists" == 1 ]]
            then
                echo ===> converting all natbib commands into simple cite commands in the .tex temporary file
                sed -E -i 's/\\cite([^{]*)\{/\\cite\{/ig' texfile.tmp
                echo ===> converting all plus signs into _plus_
                sed -E -i 's/\+/_plus_/ig' texfile.tmp
                echo ===> converting all periods into _period_
                sed -E -i 's/\./_period_/ig' texfile.tmp
            else
                echo "!!!!!!!!!!!!!!!! No tex files in repo !!"
            fi

            if [[ "$bibfileExists" == 1 ]]
            then
                echo ===> sorting the entries and removing redundancies in the .bib temporary file
                # explanation of below sed command: 
                #   :a;N;$!ba; is a loop which joins lines (using N) until it gets to last line
                #   s/(@[a-zA-Z]+)/\1## /g substitutes '@ARTICLE', '@MISC', '@INBOOK', etc with '@ARTICLE## ', '@MISC## ', '@INBOOK## '
                #   s/\} *\x0\@/\}\n\n\@/g breaks out each entry into its own separate line, separated from the other entry by a white space. 
                #   sort -k2 sorts the list on the bib label (e.g., 'abadi+2003apk591_699'), and uniq -i removes duplicates
                #   s/\x0/\n/g splits out each field within an entry into its own line
                #   s/\## //g removes the placeholder ## following the @ARTICLE, etc to restore to original format
                sed ':a;N;$!ba;s/\n/\x0/g' bibfile.tmp | \
                   sed -r 's/(@[a-zA-Z]+\{) *\x0+ */\1/g' | \
                   sed -r 's/@([a-zA-Z]+)\{([^\,]+)\,\x0/@\1\{\2\,\x0 orig = {\1}\,\x0/g' | \
                   sed -r 's/@[a-zA-Z]+/@ARTICLE## /g' | \
                   sed -r 's/\} *\x0\@/\}\n\n\@/g' | \
                   sort -k2 | \
                   uniq -i | \
                   sed 's/\x0/\n/g' | \
                   sed 's/\## //g' > tmp.tmp
                mv -f tmp.tmp bibfile.tmp
                echo ===> converting all plus signs into _plus_
                sed -E -i 's/\+/_plus_/ig' bibfile.tmp
                echo ===> converting all periods into _period_
                sed -E -i 's/\./_period_/ig' bibfile.tmp
            else
                echo "! ! ! ! ! ! ! No bib files in repo !!"
            fi

            if ([ "$bibfileExists" == 1 ] && [ "$texfileExists" == 1 ])
            then
                echo ===> installing bib_cleaner
                pip install bib_cleaner
                echo ===> now starting the bib_cleaner command
                bib_cleaner bibfile.tmp --texfiles texfile.tmp --outputbib pruned.tmp 
                echo ===> now replacing _plus_ with plus signs
                sed -E -i 's/_plus_/\+/ig' pruned.tmp
                echo ===> now replacing _period_ with periods
                sed -E -i 's/_period_/\./ig' pruned.tmp
                echo ===> now replacing @ARTICLE with original category and removing temporary orig field
                sed ':a;N;$!ba;s/\n/\x0/g' pruned.tmp | \
                   sed -r 's/@(ARTICLE)\{([^\,]+)\,\x0 orig = \{([a-zA-Z]+)\}\,\x0/@\3\{\2\,\x0/g' | \
                   sed 's/\} *\x0\@/\}\n\n\@/g' | \
                   sed 's/\x0/\n/g' > pruned.bib
            else
                echo "No .tex file and/or .bib file in repository!"
                touch pruned.bib
            fi
            
       - name: Upload bib file
         uses: actions/upload-artifact@v4
         with: 
            name: Setting path of pruned bib file
            path: pruned.bib
            
       - name: Publish pruned bib file to repo
         id: create_release
         uses: stefanzweifel/git-auto-commit-action@v5.0.0
         with:
            file_pattern:  pruned.bib
            commit_message: 'Pruned bib file'
